- add constructors to create basic meshes (regular 2D/3D lattices,...)
- add converter from hex to tetmesh
- add Lagrange multipliers to linear solvers
- add convenient wraps to do back-substitution directly into linear_solvers.h
- add matrix class (i.e. mat<real,size>, with operators and constructors from quaternions, rotations, identity, diagonal, ecc)
- move from vec2d and vec3d in vec<real,size> (DOABLE?)
- add support to read/write per element labels in OFF and HEDRA
- make sure field_serialize is lossless in terms of numeric precision
- add verdict metrics for tris/quads/tets/hexa
- put edge flip and similar operators on separate files
- put cotangents (tets/tris) on a separate .h/cpp file
- add inverse and transpose operators for 2x2 and 3x3 matrices
- remove headers from serialized vector and scalar fields (itâ€™s far more general)
- update skeleton data structure (and make relative control panel)
- Add cylinder and spheres list (with colors, size and so forth) in the render list used for meshes, so that there will be only on unified rendering access point
- Refactor PointInsideMeshCache, it should return ALL the elements containing the
  query point and let the application choose the best one
- Use robust geometric computations (volumes, dihedral angles ecc.) 
  (ref. => Lecture Notes on Geometric Robustness di Jonathan Richard Shewchuk)
- Add cotan laplacian  normalization
  (ref => https://www.ceremade.dauphine.fr/~peyre/teaching/manifold/tp4.html)
- Improve on mesh rendering (shaders, VBOs (https://www.khronos.org/opengl/wiki/VBO_-_just_examples))
- add a system of binary flags to be used by algorithms internal to cinolib


KNOWN BUGS/THINGS TO BE FIXED:
 - fix per face winding in midpoint subdivision
 - fix marching tets: degenerate triangles will be generated in some cases (see comments inside cpp file)
 - fix integral curve tracing (also refactor ray/line/plane intersections)
 - gradients on hex-meshes are buggy. maybe something wrong with face normals?


DOCUMENTATION/LICENSE
 - move to MIT License
 - add a folder "formats", containing a description of all the non standard files used in cinolib (.hedra, scalar and vector fields, sharp features)


ALGORITHMS TO IMPLEMENT:
 - object space ambient occlusion 
 - ARAP parameterization and shape deformation
 - Least Squares Conformal Maps
 - linear blend skinning and dual quaternions
