- add inverse and transpose operators for 2x2 matrices
- add instructions to compile examples on README (via bash and via QtCreator)
- remove virtual from mesh hierarchy whenever possible
- try making connectivity just by using poly_add and vert_add
- read vectors of meshes rather than meshes in GUI control panel
- make sure 1D textures are always drawn covering full spectrum (RED to BLUE in HSV RAMP)
- refactor ray/line/plane intersections and integral curve tracing (check Robust Polylines Tracing for N-Symmetry Direction Field on Triangulated Surfaces)
- implement topological operators (add/remove/collapse) also for volumetric meshes
- Add GUI controls: load/save labeling
- Turn gradient GUI control in vector field (gradient button to make a gradient)
- avoid headers from serialized vector and scalar fields (it’s far more general)
- edit texturing interface (receive the full info as parameter)
- update skeleton data structure (and make relative control panel)
- Gradients on hexmeshes are buggy. hint: check per face normals!
- add max_depth to Profiler to avoid lengthy reports
- consider avoiding to use a tree into the profiler. Sorting entries w.r.t. call time should do the job…
- extend the concept of subdivisions from hexmesh to any mesh
- add Additive Manufacturing stuff (load and process CLI files)…
- Add cylinder and spheres list (with colors, size and so forth) in the render list used for meshes, so that there will be only on unified rendering access point
- Refactor PointInsideMeshCache, it should return ALL the elements containing the
  query point and let the application choose the best one
- make a DrawableOctree (and visually test the octree)
- Add cache for eigen solvers - avoid refactoring matrices multiple times
- Use robust geometric computations (volumes, dihedral angles ecc.) 
  (ref. => Lecture Notes on Geometric Robustness di Jonathan Richard Shewchuk)
- Add cotan laplacian  normalization
  (ref => https://www.ceremade.dauphine.fr/~peyre/teaching/manifold/tp4.html)
- Improve on mesh rendering (shaders, VBOs (https://www.khronos.org/opengl/wiki/VBO_-_just_examples))
- Fix Logger (it does not flush the streaming buffer until the program is closed)